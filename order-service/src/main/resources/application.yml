
spring:
  #  profiles:
  #    active: @activatedProperties@
  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: true

  application:
    name: order-service

  datasource:
    url: jdbc:postgresql://localhost:5432/orderservice
    username: postgres
    password: andela

  zipkin:
    base-url: http://localhost:9411

  sleuth:
    probability: 1.0

  kafka:
    bootstrap-servers: localhost:9092
    template:
      default-topic: notificationTopic
    producer:
      ## serialize notification key
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      ## serialze notification value (java object) to json object
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring:
          json:
            type:
              mapping: event:com.mvc.orderservice.event.OrderPlacedEvent

server:
  port: 8081

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka

# Actuators properties
management:
  endpoints:
    web:
      exposure:
        include: '*'
  health:
    circuitbreakers:
      enabled: 'true'
  endpoint:
    health:
      show-details: always

# Resilience4j properties
resilience4j:
  circuitbreaker:
    instances:
      inventory:
        automaticTransitionFromOpenToHalfOpenEnabled: 'true'
        failureRateThreshold: '50'
        slidingWindowType: COUNT_BASED
        event-consumer-buffer-size: '10'
        registerHealthIndicator: 'true'
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: '3'
        slidingWindowSize: '5'

## Resilience4J Timeout Properties
  timelimiter:
    instances:
      inventory:
        timeout-duration: 3s
## Resilience4J Retry Properties
  retry:
    instances:
      inventory:
        wait-duration: 5s
        max-attempts: '3'